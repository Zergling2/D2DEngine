#pragma once
#include "Components\Collider.h"
#include "Common\Math2D.h"

namespace ip
{
	class BoxCollider : public Collider
	{
	public:
		// x0, y0, x1, y1, x2, y2, x3, y3
		inline BoxCollider(math::Size2 size)
			: Collider(ColliderType::Box)
			, m_extentABS{ size.width * real(0.5), size.height* real(0.5) }
		{
		}
		virtual ~BoxCollider() override {}
		// ==========================================================================
		virtual void ComputeAABB(struct AABB* const pAABB, const class RigidBody* const pRigidBody) override;
		void GetWorldMinMax(const math::Vector2& projAxis, real* pMin, real* pMax) const;
		const math::Vector2 GetSupport(const math::Vector2& dir) const;
	public:
		math::Vector2 m_extentABS;
		math::Vector2 m_points[4];		// world coordinate buffer		// simd H/W ACC (X1 X2 X3 X4) (Y1 Y2 Y3 Y4) CALC
	};
}
